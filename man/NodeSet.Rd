% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/node-set.R
\name{NodeSet}
\alias{NodeSet}
\title{R6 class representing a set of nodes (defined by 'tag', see helpers).}
\description{
R6 class representing a set of nodes (defined by 'tag', see helpers).

R6 class representing a set of nodes (defined by 'tag', see helpers).
}
\details{
The set is composed of nodes, nodes are inserted and then tracked by id.
Identical nodes (name and attributes) have their children merged on 
insert.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{size}}{number of distinct nodes in the set}

\item{\code{ids}}{of all nodes in the set.}

\item{\code{child_ids}}{list of ids of all node children}

\item{\code{attributes}}{list of attributes of all nodes}

\item{\code{data}}{list of data of all nodes}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{NodeSet$new()}}
\item \href{#method-insert}{\code{NodeSet$insert()}}
\item \href{#method-link}{\code{NodeSet$link()}}
\item \href{#method-clear}{\code{NodeSet$clear()}}
\item \href{#method-get}{\code{NodeSet$get()}}
\item \href{#method-filter}{\code{NodeSet$filter()}}
\item \href{#method-mutate}{\code{NodeSet$mutate()}}
\item \href{#method-build}{\code{NodeSet$build()}}
\item \href{#method-modify}{\code{NodeSet$modify()}}
\item \href{#method-clone}{\code{NodeSet$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Used as NodeSet$new(...) create a new node set
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{nodes to be inserted into the set}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a 'NodeSet' object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-insert"></a>}}
\if{latex}{\out{\hypertarget{method-insert}{}}}
\subsection{Method \code{insert()}}{
insert a new node into the set, if it is identical
(name and attributes) as a current member, merge it into that member
so that all children are preserved.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$insert(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{node to insert}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE iff the new node was not identical to any other node (set
size increases).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-link"></a>}}
\if{latex}{\out{\hypertarget{method-link}{}}}
\subsection{Method \code{link()}}{
insert a new edge into the set, if it is identical
to a current link, merge it into that link
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$link(from, to, f = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{from}}{id of originating node}

\item{\code{to}}{id of target node}

\item{\code{f}}{transfer function implementing the edge}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
id of edge
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clear"></a>}}
\if{latex}{\out{\hypertarget{method-clear}{}}}
\subsection{Method \code{clear()}}{
clear the current nodes from the set
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$clear()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\if{latex}{\out{\hypertarget{method-get}{}}}
\subsection{Method \code{get()}}{
get a specific node from the set
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$get(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{hash of the node}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
node with the 'id', or NULL if missing
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filter"></a>}}
\if{latex}{\out{\hypertarget{method-filter}{}}}
\subsection{Method \code{filter()}}{
return a subset node set with only a subset of
             nodes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$filter(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{expression (matches `dplyr::filter` used to subset}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
subset of nodes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mutate"></a>}}
\if{latex}{\out{\hypertarget{method-mutate}{}}}
\subsection{Method \code{mutate()}}{
modify nodes returns modified nodes *also* modifies
             original
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$mutate(..., .which = "data")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{expression (matches `dplyr::mutate`) used to modify}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
modified nodes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-build"></a>}}
\if{latex}{\out{\hypertarget{method-build}{}}}
\subsection{Method \code{build()}}{
apply a process (a list of transitions) to all nodes
in the set until no new nodes are created.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$build(process)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{process}}{the process to apply}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the final count of nodes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-modify"></a>}}
\if{latex}{\out{\hypertarget{method-modify}{}}}
\subsection{Method \code{modify()}}{
apply a process (a list of transitions) to all nodes
in the set once.  Does not create new nodes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$modify(process)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{process}}{the process to apply}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the final count of nodes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NodeSet$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
